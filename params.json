{"name":"Behrooz File System (BFS)","tagline":"An in-memory distributed POSIX-compatible file system","body":"### Welcome to BFS \r\nBFS is an open-source distributed, scalable, replicated in-memory filesystem. BFS provides a POSIX compatible interface and can be mounted under any directory and be used same as a traditional filesystem such as Ext4 or NTFS as a userspace application without any kernel modification. BFS utilizes memory to store data which means a blazingly fast read/write speed. BFS is backed by Openstack Swift object storage (backend storage can be a disk, Amazon S3, or any other persistent storage as well). BFS nodes can communicate thorough a TCP connection or a faster ZERO_Networking solution. In ZERO_Networking mode the regular operating system network stack is bypassed and raw packets are shared between userspace and kernel.\r\n\r\nBFS has been developed as part of Behrooz Shafiee Sarjaz master thesis under supervision of professor [Martin Karsten](https://cs.uwaterloo.ca/~mkarsten/) at [Cheriton School of Computer Science](https://cs.uwaterloo.ca/), [University of Waterloo](https://uwaterloo.ca/).\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\n### Preliminary evaluation\r\nBFS can be used as a standalone filesystem on a single machine (STANDALONE_MODE) or even as a replacement for Apache Hadoop HDFS. In order to evaluate BFS performance, three different sets of experiments were defined. First, BFS was evaluated using IOZONE filesystem benchmark tool in standalone mode in which all  \r\nIO operations are performed on a single machine. Second, BFS remote operations were evaluated using IOZONE; however, this time all IO operation were performed on a remote node. Finally, BFS was used as the underlying Hadoop mapreduce distributed file system.\r\n\r\n** Evaluation Environment **\r\nEvaluation   environment   includes   a   cluster   of   7   machines   each   with   the   following   specification:  \r\n2GB 266MHz DDR Memory \r\nIntel(R) Xeon(TM) CPU 3.06GHz Quad core 32 bit processor \r\nIntel 66MHz Gigabit Ethernet Controller \r\noperated by Debian i686(32 bit) GNU/Linux 8.0 (Kernel 3.16.7)\r\n\r\n** Standalone mode **\r\nIn this mode BFS was evaluated by IOZONE for write, rewrite, read, reread, random read, and random write operations, all performed locally on a single node. Block size was varied from standard 4 KB to 16 MB with file size from 1MB to 1GB. Unfortunately, fuse library which is used by BFS to provide a transparent POSIX compatible interface to applications does not support block sizes larger than 128KB. Therefore, it was patched to support block sizes up to 16 MB. \r\n\r\nimage:\r\n![](http://www.newyorker.com/wp-content/uploads/2012/09/philip-roth-af.jpg)\r\n\r\nRead on a single node locally:\r\n![Read on a single node locally.](http://i.imgur.com/jJSNs7J.png)\r\n\r\nWrite on a single node locally:\r\n![Write on a single node locally.](http://i.imgur.com/vECwIW6.png)\r\n\r\nPreliminary evaluation\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at https://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}